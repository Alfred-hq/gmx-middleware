specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: RewardRouterV2
    network: avalanche
    source:
      address: "0x82147C5A7E850eA4E28155DF107F2590fD4ba327"
      abi: RewardRouterV2
      startBlock: 8353520
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakeGmx
        - UnstakeGmx
        - StakeGlp
        - UnstakeGlp
      abis:
        - name: RewardRouterV2
          file: ./abis/RewardRouterV2.json
      eventHandlers:
        - event: StakeGmx(address,address,uint256)
          handler: handleStakeGmx
        - event: UnstakeGmx(address,address,uint256)
          handler: handleUnstakeGmx
        - event: StakeGlp(address,uint256)
          handler: handleStakeGlp
        - event: UnstakeGlp(address,uint256)
          handler: handleUnstakeGlp
      file: ./src/avalanche/reward.ts


  - kind: ethereum/contract
    name: VesterGMX
    network: avalanche
    source:
      address: "0x472361d3cA5F49c8E633FB50385BfaD1e018b445"
      abi: Vester
      startBlock: 8200001
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Deposit
        - Withdraw
      abis:
        - name: Vester
          file: ./abis/Vester.json
      eventHandlers:
        - event: Deposit(address,uint256)
          handler: handleDepositVesting
        - event: Withdraw(address,uint256,uint256)
          handler: handleWithdrawVesting
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: VesterGLP
    network: avalanche
    source:
      address: "0x62331A7Bd1dfB3A7642B7db50B5509E57CA3154A"
      abi: Vester
      startBlock: 8200001
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Deposit
        - Withdraw
      abis:
        - name: Vester
          file: ./abis/Vester.json
      eventHandlers:
        - event: Deposit(address,uint256)
          handler: handleDepositVesting
        - event: Withdraw(address,uint256,uint256)
          handler: handleWithdrawVesting
      file: ./src/arbitrum/reward.ts

  - kind: ethereum/contract
    name: FastPriceFeed
    network: avalanche
    source:
      address: "0x02b7023d43bc52bff8a0c54a9f2ecec053523bf6"
      abi: FastPriceEvents
      startBlock: 8351228
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - PriceUpdate
      abis:
        - name: FastPriceEvents
          file: ./abis/FastPriceEvents.json
      eventHandlers:
        - event: PriceUpdate(address,uint256,address)
          handler: handleFastPriceEvent
      file: ./src/arbitrum/tokenPrice.ts

  - kind: ethereum/contract
    name: GlpManager
    network: avalanche
    source:
      address: "0xe1ae4d4b06A5Fe1fc288f6B4CD72f9F8323B107F"
      abi: GlpManager
      startBlock: 8351258
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pricefeed
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/avalanche/tokenPrice.ts

  - kind: ethereum/contract
    name: gmxVault
    network: avalanche
    source:
      address: "0x9ab2De34A33fB459b538c43f251eB825645e8595"
      abi: gmxVault
      startBlock: 8200001
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ClosePosition
        - DecreasePosition
        - IncreasePosition
        - LiquidatePosition
        - UpdatePosition
        - Trade
      abis:
        - name: gmxVault
          file: ./abis/Vault-avalanche.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256,uint256)
          handler: handleUpdatePosition
      file: ./src/trading.ts